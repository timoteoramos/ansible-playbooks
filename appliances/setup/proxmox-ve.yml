---
- name: Install Proxmox Virtual Environment
  hosts: all

  vars:
    kernel_version: 6.2
    server_domain: example.local

  tasks:
    - name: 'Configure /etc/hosts'
      ansible.builtin.template:
        src: templates/etc-hosts.j2
        dest: /etc/hosts
        owner: root
        group: root
        mode: '0644'

    - name: 'Add no-subscription repository'
      when: ansible_facts['distribution'] == 'Debian'
      ansible.builtin.template:
        src: templates/proxmox-ve-sources.j2
        dest: /etc/apt/sources.list.d/pve-install-repo.list
        owner: root
        group: root
        mode: '0644'

    - name: 'Download the repository key'
      when: ansible_facts['distribution'] == 'Debian'
      ansible.builtin.get_url:
        url: https://enterprise.proxmox.com/debian/proxmox-release-{{ ansible_facts['distribution_release'] }}.gpg
        dest: /etc/apt/trusted.gpg.d/proxmox-release-{{ ansible_facts['distribution_release'] }}.gpg
        mode: '0644'

    - name: 'Ensure aptitude is installed'
      when: ansible_facts['distribution'] == 'Debian'
      ansible.builtin.apt:
        update_cache: true
        pkg:
          - aptitude

    - name: 'Do a full-upgrade before continue'
      when: ansible_facts['distribution'] == 'Debian'
      ansible.builtin.apt:
        upgrade: full

    - name: 'Install PVE kernel'
      when: ansible_facts['distribution'] == 'Debian'
      ansible.builtin.apt:
        pkg:
          - pve-kernel-{{ kernel_version }}

    - name: 'Perform a system reboot and wait to continue'
      when: ansible_facts['distribution'] == 'Debian'
      ansible.builtin.reboot:

    - name: 'Install PVE'
      when: ansible_facts['distribution'] == 'Debian'
      ansible.builtin.apt:
        update_cache: true
        pkg:
          - proxmox-ve
          - postfix
          - open-iscsi

    - name: 'Remove Debian kernel and os-prober'
      when: ansible_facts['distribution'] == 'Debian'
      ansible.builtin.apt:
        pkg:
          - linux-image-*
          - os-prober
        state: absent

    - name: 'Update grub'
      when: ansible_facts['os_family'] == 'Debian'
      ansible.builtin.command: update-grub
      register: update_grub
      changed_when:
        - update_grub.rc == 0

    - name: 'Disable enterprise repository'
      when: ansible_facts['distribution'] == 'Debian'
      ansible.builtin.replace:
        path: /etc/apt/sources.list.d/pve-enterprise.list
        regexp: '^deb'
        replace: '# deb'
